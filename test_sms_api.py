# test_sms_api.py

import requests

class SMSAPITester:
    def __init__(self):
        self.base_url = 'https://skyariacp.com/webservice/url/send.php'
        self.username = 'aria100907'
        self.password = '9197608060'
        self.api_key = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiZThjZGFlNzZiMThmMjJkYTA3NDk3NDA2NzY1OGMxMmVlNzUwMWQyNzBmNzUyY2QzNWY4MDhmNTFmNDMyZmYzNGY1MTQ4YTljMTA1NjkzZTIiLCJpYXQiOjE3NTk3NTAyOTkuODE4ODcyLCJuYmYiOjE3NTk3NTAyOTkuODE4ODcyLCJleHAiOjE3OTEyODYyOTkuODE4ODcyLCJzdWIiOiIxNzkxNSIsInNjb3BlcyI6IltdIn0.KpBphiA4urDEeiesPRnAUiYQAPT-G8xicIcpLKTLNHsdqAnP65WErFN-SNObNL9_jbUe1_y3IxLm2WJ6KJ4wAjL7D8qDGSWWjqal8OR6a8xuvUWrsri--Chx__YlP4Ukn1MohB8La2bb0dmY17Fbqq5XkW6crOMGQ22pEOuZD3wz6kR9pagk48NFuWy5o-gvlZBxLLulf1y9pUbqEvSlSolu-2VE8Iwqqa9GgDFaWAdsMlbXrZVMz3LxgZ7MCVCl10P5eEHC0pSMC7wAqwLbYZrbdF6HtJDy_x_9_jshayExdOyRnBTn0QJ_9YhBtXYYBp6T2GYLrzyU0ivsiw82Hv086r4YYt_qirXX4IC586v0V3Waw0LZzF6sIuA-f1ysW1A3SIXK2kMty8A3Xjv8ieYlQmycXEs_Di5el244wzjTvC_tlSO2qmzOwvLv3UqSjXvaylFS80qifgQg6mof5yPcVJyiEAoE5rieS-w3jirxWQXx6D99VIge6RwJH0FMwZJcTZrmZJyqVX3Z2v5p95yrGsmrg5JuK04dyKLmznoDhXLFUsW1AK-1YQ5knTOzKIJyrIGEEYX1Xfl5qxZN69kNXGWTMkM6H0JoYwK9MD7CO4K3H8ObmtLQdqZV7JVBUGlgbfwwdFnuPkyKtfmW8AsCu9t6Fq_o6VDrr0-sk2Y'
    
    def test_credit(self):
        """ÿ™ÿ≥ÿ™ ÿØÿ±€åÿßŸÅÿ™ ÿßÿπÿ™ÿ®ÿßÿ±"""
        print("=" * 60)
        print("ÿ™ÿ≥ÿ™ 1: ÿ®ÿ±ÿ±ÿ≥€å ÿßÿπÿ™ÿ®ÿßÿ± ÿ≠ÿ≥ÿßÿ®")
        print("=" * 60)
        
        params = {
            'method': 'getcredit',
            'format': 'json',
            'username': self.username,
            'password': self.password,
            'api_key': self.api_key
        }
        
        try:
            response = requests.get(self.base_url, params=params, timeout=10)
            print(f"Status Code: {response.status_code}")
            print(f"Response: {response.text}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    credit = float(data)
                    print(f"\nÿßÿπÿ™ÿ®ÿßÿ± ÿ®ÿßŸÇ€åŸÖÿßŸÜÿØŸá: {credit:,.0f} ÿ±€åÿßŸÑ")
                    
                    if credit <= 0:
                        print("\n‚ö†Ô∏è  ÿßÿπÿ™ÿ®ÿßÿ± ÿ¥ŸÖÿß ÿµŸÅÿ± ÿßÿ≥ÿ™! ŸÑÿ∑ŸÅÿßŸã ÿ≠ÿ≥ÿßÿ® ÿ±ÿß ÿ¥ÿßÿ±⁄ò ⁄©ŸÜ€åÿØ.")
                        return False
                    else:
                        print("\n‚úÖ ÿßÿπÿ™ÿ®ÿßÿ± ⁄©ÿßŸÅ€å ÿßÿ≥ÿ™.")
                        return True
                except:
                    print(f"\n⁄©ÿØ ÿÆÿ∑ÿß: {data}")
                    self._explain_error(data)
                    return False
            
        except Exception as e:
            print(f"\n‚ùå ÿÆÿ∑ÿß: {str(e)}")
            return False
        
        print("=" * 60)
        return False
    
    def test_send_sms(self, to_number='09121234567', message='ÿ™ÿ≥ÿ™ ÿßÿ±ÿ≥ÿßŸÑ Ÿæ€åÿßŸÖ⁄©'):
        """ÿ™ÿ≥ÿ™ ÿßÿ±ÿ≥ÿßŸÑ Ÿæ€åÿßŸÖ⁄©"""
        print("\n" + "=" * 60)
        print("ÿ™ÿ≥ÿ™ 2: ÿßÿ±ÿ≥ÿßŸÑ Ÿæ€åÿßŸÖ⁄© ÿ¢ÿ≤ŸÖÿß€åÿ¥€å")
        print("=" * 60)
        print(f"⁄Ø€åÿ±ŸÜÿØŸá: {to_number}")
        print(f"Ÿæ€åÿßŸÖ: {message}")
        
        params = {
            'method': 'sendsms',
            'format': 'json',
            'username': self.username,
            'password': self.password,
            'api_key': self.api_key,
            'from': '10001234',  # ‚ö†Ô∏è ÿ¥ŸÖÿßÿ±Ÿá ŸÅÿ±ÿ≥ÿ™ŸÜÿØŸá ÿÆŸàÿØ ÿ±ÿß Ÿàÿßÿ±ÿØ ⁄©ŸÜ€åÿØ
            'to': to_number,
            'text': message,
            'type': '0'  # 0=ÿπÿßÿØ€åÿå 1=ŸÅŸÑÿ¥
        }
        
        try:
            response = requests.get(self.base_url, params=params, timeout=10)
            print(f"\nStatus Code: {response.status_code}")
            print(f"Response: {response.text}")
            
            if response.status_code == 200:
                result = response.json()
                
                if isinstance(result, str) and len(result) == 18:
                    print(f"\n‚úÖ Ÿæ€åÿßŸÖ⁄© ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿßÿ±ÿ≥ÿßŸÑ ÿ¥ÿØ!")
                    print(f"⁄©ÿØ Ÿæ€å⁄Ø€åÿ±€å: {result}")
                    return True
                else:
                    print(f"\n‚ùå ÿÆÿ∑ÿß ÿØÿ± ÿßÿ±ÿ≥ÿßŸÑ:")
                    self._explain_error(result)
                    return False
            
        except Exception as e:
            print(f"\n‚ùå ÿÆÿ∑ÿß: {str(e)}")
            return False
        
        print("=" * 60)
        return False
    
    def _explain_error(self, code):
        """ÿ™Ÿàÿ∂€åÿ≠ ⁄©ÿØŸáÿß€å ÿÆÿ∑ÿß"""
        errors = {
            '0': "ŸÜÿßŸÖ ⁄©ÿßÿ±ÿ®ÿ±€å €åÿß ÿ±ŸÖÿ≤ ÿπÿ®Ÿàÿ± ŸÜÿßÿØÿ±ÿ≥ÿ™",
            '1': "ÿßÿπÿ™ÿ®ÿßÿ± ⁄©ÿßŸÅ€å ŸÜ€åÿ≥ÿ™",
            '2': "ÿ¥ŸÖÿßÿ±Ÿá ŸÅÿ±ÿ≥ÿ™ŸÜÿØŸá ŸÜÿßŸÖÿπÿ™ÿ®ÿ± ÿßÿ≥ÿ™",
            '4': "ÿßŸÖ⁄©ÿßŸÜ ÿßÿ±ÿ≥ÿßŸÑ ÿ∫€åÿ±ŸÅÿπÿßŸÑ ÿßÿ≥ÿ™",
            '5': "ŸæŸÜŸÑ ⁄©ÿßÿ±ÿ®ÿ±€å ÿ∫€åÿ±ŸÅÿπÿßŸÑ ÿßÿ≥ÿ™",
            '6': "ŸæŸÜŸÑ ⁄©ÿßÿ±ÿ®ÿ±€å ŸÖŸÜŸÇÿ∂€å ÿ¥ÿØŸá ÿßÿ≥ÿ™",
            '7': "ŸÖÿ™ŸÜ Ÿæ€åÿßŸÖ ÿÆÿßŸÑ€å ÿßÿ≥ÿ™",
            '9': "Ÿá€å⁄Ü ⁄Ø€åÿ±ŸÜÿØŸá‚Äåÿß€å Ÿàÿßÿ±ÿØ ŸÜÿ¥ÿØŸá",
            '10': "ŸÖÿ≠ÿØŸàÿØ€åÿ™ ÿ≤ŸÖÿßŸÜ€å ÿßÿ±ÿ≥ÿßŸÑ ÿßÿ≤ ÿÆÿ∑Ÿàÿ∑ ÿπŸÖŸàŸÖ€å",
            '11': "ÿÆÿ∑ÿß€å ŸÜÿßŸÖÿ¥ÿÆÿµ - ÿ®ÿß Ÿæÿ¥ÿ™€åÿ®ÿßŸÜ€å ÿ™ŸÖÿßÿ≥ ÿ®⁄Ø€åÿ±€åÿØ",
        }
        
        code_str = str(code)
        if code_str in errors:
            print(f"⁄©ÿØ {code}: {errors[code_str]}")
        else:
            print(f"ÿÆÿ∑ÿß€å ŸÜÿßÿ¥ŸÜÿßÿÆÿ™Ÿá: {code}")
    
    def run_all_tests(self):
        """ÿßÿ¨ÿ±ÿß€å ÿ™ŸÖÿßŸÖ ÿ™ÿ≥ÿ™‚ÄåŸáÿß"""
        print("\nüöÄ ÿ¥ÿ±Ÿàÿπ ÿ™ÿ≥ÿ™‚ÄåŸáÿß€å API Ÿæ€åÿßŸÖ⁄©")
        print("=" * 60)
        
        # ÿ™ÿ≥ÿ™ 1: ÿßÿπÿ™ÿ®ÿßÿ±
        if not self.test_credit():
            print("\n‚ö†Ô∏è  ÿ™ÿ≥ÿ™ ÿßÿπÿ™ÿ®ÿßÿ± ŸÖŸàŸÅŸÇ ŸÜÿ®ŸàÿØ. ÿßÿØÿßŸÖŸá ÿ™ÿ≥ÿ™‚ÄåŸáÿß ŸÖÿ™ŸàŸÇŸÅ ÿ¥ÿØ.")
            return
        
        # ÿ™ÿ≥ÿ™ 2: ÿßÿ±ÿ≥ÿßŸÑ (ŸÅŸÇÿ∑ ÿß⁄Øÿ± ÿ¥ŸÖÿßÿ±Ÿá ŸÖŸàÿ®ÿß€åŸÑ ŸÖÿπÿ™ÿ®ÿ± Ÿàÿßÿ±ÿØ ⁄©ŸÜ€åÿØ)
        print("\n‚ö†Ô∏è  ÿ®ÿ±ÿß€å ÿ™ÿ≥ÿ™ ÿßÿ±ÿ≥ÿßŸÑÿå ÿ¥ŸÖÿßÿ±Ÿá ŸÖŸàÿ®ÿß€åŸÑ ŸÖÿπÿ™ÿ®ÿ± Ÿàÿßÿ±ÿØ ⁄©ŸÜ€åÿØ:")
        print("   (Enter ÿ®ÿ±ÿß€å ÿ±ÿØ ⁄©ÿ±ÿØŸÜ)")
        phone = input("ÿ¥ŸÖÿßÿ±Ÿá ŸÖŸàÿ®ÿß€åŸÑ (ŸÖÿ´ÿßŸÑ: 09121234567): ").strip()
        
        if phone and phone.startswith('09') and len(phone) == 11:
            self.test_send_sms(to_number=phone)
        else:
            print("\n‚è≠Ô∏è  ÿ™ÿ≥ÿ™ ÿßÿ±ÿ≥ÿßŸÑ ÿ±ÿØ ÿ¥ÿØ.")
        
        print("\n‚úÖ ÿ™ÿ≥ÿ™‚ÄåŸáÿß ÿ®Ÿá Ÿæÿß€åÿßŸÜ ÿ±ÿ≥€åÿØ.")
        print("=" * 60)


if __name__ == '__main__':
    tester = SMSAPITester()
    tester.run_all_tests()
